<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Chapitre 2. Les interfaces utilisateur &#8211; Thomas VEILLARD</title>
	<atom:link href="https://thomas-veillard.fr/category/theorie-des-systemes-dexploitation-et-pratique-de-gnu-linux/chapitre-2-les-interfaces-utilisateur/feed/" rel="self" type="application/rss+xml" />
	<link>https://thomas-veillard.fr/</link>
	<description>Mes cours et supports pÃ©dagogiques pour l&#039;enseignement de l&#039;ingÃ©nierie informatique.</description>
	<lastBuildDate>Sun, 14 Feb 2021 12:46:07 +0000</lastBuildDate>
	<language>fr-FR</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.7.4</generator>
	<item>
		<title>3. La ligne de commande et les entrÃ©es / sorties</title>
		<link>https://thomas-veillard.fr/theorie-des-systemes-dexploitation-et-pratique-de-gnu-linux/chapitre-2-les-interfaces-utilisateur/3-la-ligne-de-commande-et-les-entrees-sorties/</link>
		
		<dc:creator><![CDATA[Thomas Veillard]]></dc:creator>
		<pubDate>Fri, 12 Feb 2021 18:30:05 +0000</pubDate>
				<category><![CDATA[Chapitre 2. Les interfaces utilisateur]]></category>
		<category><![CDATA[ThÃ©orie des systÃ¨mes dâ€™exploitation et pratique de GNU/Linux]]></category>
		<guid isPermaLink="false">https://thomas-veillard.fr/?p=696</guid>

					<description><![CDATA[<p>Rappels Lors des prÃ©cÃ©dentes sÃ©ances, nous avons abordÃ© : bash, un interprÃ©teur de ligne de commande et un langage de script. coreutils, un ensemble de programmes en lignes de commande du projet GNU. apt, pour installer des logiciels, en ligne de commande Ã  nouveau. L&#8217;interprÃ©teur de ligne de commande Bash est lâ€™interprÃ©teur le plus populaire &#8230; <a href="https://thomas-veillard.fr/theorie-des-systemes-dexploitation-et-pratique-de-gnu-linux/chapitre-2-les-interfaces-utilisateur/3-la-ligne-de-commande-et-les-entrees-sorties/" class="more-link">Continuer la lecture de <span class="screen-reader-text">3. La ligne de commande et les entrÃ©es / sorties</span></a></p>
<p>Lâ€™article <a rel="nofollow" href="https://thomas-veillard.fr/theorie-des-systemes-dexploitation-et-pratique-de-gnu-linux/chapitre-2-les-interfaces-utilisateur/3-la-ligne-de-commande-et-les-entrees-sorties/">3. La ligne de commande et les entrÃ©es / sorties</a> est apparu en premier sur <a rel="nofollow" href="https://thomas-veillard.fr/">Thomas VEILLARD</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<h4>Rappels</h4>



<p>Lors des prÃ©cÃ©dentes sÃ©ances, nous avons abordÃ© :</p>



<ul><li>bash, un interprÃ©teur de ligne de commande et un langage de script.</li><li>coreutils, un ensemble de programmes en lignes de commande du projet GNU.</li><li>apt, pour installer des logiciels, en ligne de commande Ã  nouveau.</li></ul>



<h4>L&rsquo;interprÃ©teur de ligne de commande</h4>



<p>Bash est lâ€™interprÃ©teur le plus populaire sur les systÃ¨mes Unix et Unix-like. Il est installÃ© et utilisÃ© par dÃ©faut sur GNU/Linux, MacOS, etc.</p>



<p>Pour simplifier, on peut dÃ©crire bash en mode interactif comme un environnement oÃ¹ l&rsquo;utilisateur pose une question (commande) et reÃ§oit une rÃ©ponse (message texte).</p>



<p>Plus prÃ©cisÃ©ment, quand l&rsquo;utilisateur exÃ©cute une commande :</p>



<ol><li>L&rsquo;utilisateur saisit une commande et appuie sur la touche Â«Â entrÃ©eÂ Â».</li><li>Bash analyse la commande, qui suit une syntaxe prÃ©cise.</li><li>Bash lance le programme dÃ©signÃ© avec des arguments.</li><li>Le programme s&rsquo;exÃ©cute, produit une rÃ©ponse (notamment un texte) et quitte.</li><li>Bash affiche la rÃ©ponse Ã  l&rsquo;utilisateur, puis attend une nouvelle commande.</li></ol>



<figure class="wp-block-image size-large"><img loading="lazy" width="768" height="553" src="https://thomas-veillard.fr/wp-content/uploads/2021/01/ls-lhsa-etc.png" alt="" class="wp-image-698" srcset="https://thomas-veillard.fr/wp-content/uploads/2021/01/ls-lhsa-etc.png 768w, https://thomas-veillard.fr/wp-content/uploads/2021/01/ls-lhsa-etc-300x216.png 300w" sizes="(max-width: 768px) 100vw, 768px" /><figcaption>ExÃ©cution de la commande Â«Â ls -lhsa /etcÂ Â» et affichage de la rÃ©ponse du programme Â«Â lsÂ Â». Ce logiciel permet de lister le contenu d&rsquo;un rÃ©pertoire et d&rsquo;afficher des propriÃ©tÃ©s des fichiers (nom, taille, propriÃ©taire, permissions&#8230;).</figcaption></figure>



<h4>Structure dâ€™une commande basique</h4>



<p class="exercice">ConsidÃ©rons la commande suivante : <span style="color:#3d85c6" class="has-inline-color">ls</span> <span style="color:#741b47" class="has-inline-color">-lhsa</span> <span style="color:#bf9000" class="has-inline-color">/etc</span></p>



<p><strong><span style="color:#3d85c6" class="has-inline-color">Le nom de la commande.</span></strong> En rÃ¨gle gÃ©nÃ©rale, une commande est en rÃ©alitÃ© un programme. GrÃ¢ce Ã  son nom, bash le retrouve dans les rÃ©pertoires standards. Par exemple, cette commande lancera le programme dont le binaire se situe Ã  lâ€™emplacement /bin/ls. Ce logiciel permet de lister le contenu d&rsquo;un rÃ©pertoire et d&rsquo;afficher des propriÃ©tÃ©s des fichiers (nom, taille, propriÃ©taire, permissions&#8230;).</p>



<p><strong><span style="color:#741b47" class="has-inline-color">Les options</span></strong> permettent de personnaliser le comportement. Pour ls, dâ€™aprÃ¨s le manuel:</p>


<pre class="wp-block-code" aria-describedby="shcb-language-1" data-shcb-language-name="Bash" data-shcb-language-slug="bash"><div><code class="hljs language-bash"><span class="hljs-comment"># extrait de "man ls", commande qui permet d'accÃ©der Ã  la documentation de "ls"</span>
-l	use a long listing format
-s	<span class="hljs-built_in">print</span> the allocated size of each file, <span class="hljs-keyword">in</span> blocks
-a	<span class="hljs-keyword">do</span> not ignore entries starting with .
-h 	with -l and -s, <span class="hljs-built_in">print</span> sizes like 1K 234M 2G etc.</code></div><small class="shcb-language" id="shcb-language-1"><span class="shcb-language__label">Langage du codeÂ :</span> <span class="shcb-language__name">Bash</span> <span class="shcb-language__paren">(</span><span class="shcb-language__slug">bash</span><span class="shcb-language__paren">)</span></small></pre>


<p><strong><span style="color:#bf9000" class="has-inline-color">Les arguments</span></strong> permettent gÃ©nÃ©ralement de spÃ©cifier la cible du traitement. Par exemple, ls attend optionnellement une liste de chemins de dossiers et de fichiers Ã  examiner.</p>



<h4>Les entrÃ©es d&rsquo;un processus</h4>



<p>Un processus accepte des <strong>entrÃ©es</strong> (qui contiennent un problÃ¨me Ã  rÃ©soudre). Il effectue ensuite des traitements, qui aboutissent Ã  un rÃ©sultat. Ce rÃ©sultat Ã©tant communiquÃ©, il s&rsquo;agit d&rsquo;une <strong>sortie</strong>. Enfin, le traitement peut Ã©chouer, auquel cas le processus remonte l&rsquo;erreur. C&rsquo;est aussi une <strong>sortie</strong>, bien qu&rsquo;on s&rsquo;en serait passÃ© ğŸ˜± !</p>



<p class="exercice">Reprenons notre prÃ©cÃ©dente commande : <span style="color:#3d85c6" class="has-inline-color">ls</span><span class="has-inline-color has-purple-color"> </span><span class="has-inline-color has-medium-pink-color">-lhsa /etc</span></p>



<p>Cette commande aboutit Ã  lancer un processus <code>ls</code>. Ce processus a diverses entrÃ©es :</p>



<ul><li>Le contenu passÃ© sur la ligne de commande aprÃ¨s le nom du programme sera transmis au processus lors de son initialisation. Ainsi, l&rsquo;expression Â«Â <span class="has-inline-color has-medium-pink-color">-lhsa /etc</span>Â Â» a du sens pour le programme <code>ls</code> et formalise le problÃ¨me Ã  rÃ©soudre (cf. section prÃ©cÃ©dente). On appelle ces contenus des Â«Â paramÃ¨tresÂ Â» et il s&rsquo;agit d&rsquo;une entrÃ©e pour le processus. Ã€ noter que cette entrÃ©e est immuable pour toute la vie du processus.</li></ul>



<ul><li>Diverses informations contextuelles. Par exemple, le processus connait le chemin du rÃ©pertoire courant (rÃ©pertoire depuis lequel l&rsquo;utilisateur a lancÃ© le processus). Il connait aussi l&rsquo;identitÃ© de l&rsquo;utilisateur, etc. </li></ul>



<ul><li>D&rsquo;autres donnÃ©es peuvent arriver durant le cycle de vie du programme. Par exemple, un processus peut poser une question et laisser l&rsquo;utilisateur y rÃ©pondre. Le processus reÃ§oit chaque caractÃ¨re saisi dans un flux. Ce flux venant du clavier s&rsquo;appelle l&rsquo;entrÃ©e standard.</li></ul>



<ul><li>Bien sÃ»r, d&rsquo;autres flux d&rsquo;entrÃ©e peuvent Ãªtre initiÃ©s par le processus : typiquement une connexion rÃ©seau ou une lecture de fichier.</li></ul>



<h4>Les sorties d&rsquo;un processus</h4>



<p>Toujours dans notre exemple <code>ls -lhsa /etc</code>, le rÃ©sultat du processus est un texte. On regardera au passage que ce format autorise une mise en page en colonne ou un rendu de couleurs.</p>


<pre class="wp-block-code" aria-describedby="shcb-language-2" data-shcb-language-name="Shell Session" data-shcb-language-slug="shell"><div><code class="hljs language-shell">thomas@thinkpad-laptop:~$ ls -lhsa /etc
total 1,3M
 12K drwxr-xr-x 156 root root    12K janv. 18 19:06 .
4,0K drwxr-xr-x  20 root root   4,0K mai   31  2020 ..
4,0K drwxr-xr-x   3 root root   4,0K avril 23  2020 acpi
4,0K -rw-r--r--   1 root root   3,0K avril 23  2020 adduser.conf
4,0K drwxr-xr-x   3 root root   4,0K avril 23  2020 alsa
 12K drwxr-xr-x   2 root root    12K janv. 18 19:12 alternatives
4,0K -rw-r--r--   1 root root    401 juil. 16  2019 anacrontab
4,0K -rw-r--r--   1 root root    244 oct.   7 10:42 antidote.conf
4,0K drwxr-xr-x   3 root root   4,0K oct.  23 10:19 apache2
4,0K -rw-r--r--   1 root root    433 oct.   2  2017 apg.conf
[...] sortie tronquÃ©e</code></div><small class="shcb-language" id="shcb-language-2"><span class="shcb-language__label">Langage du codeÂ :</span> <span class="shcb-language__name">Shell Session</span> <span class="shcb-language__paren">(</span><span class="shcb-language__slug">shell</span><span class="shcb-language__paren">)</span></small></pre>


<p>D&rsquo;ailleurs, la sortie console d&rsquo;un processus est un flux. La commande <code>ls</code> laisse penser qu&rsquo;il faut attendre la complÃ©tion de l&rsquo;exÃ©cution du programme pour avoir le rÃ©sultat. C&rsquo;est faux, et une commande que <code>htop</code> le dÃ©montre. Un processus peut envoyer des messages par intermittence.</p>



<figure class="wp-block-image size-large"><img loading="lazy" width="734" height="524" src="https://thomas-veillard.fr/wp-content/uploads/2021/01/htop-actualise-sa-sortie-par-intermittence.gif" alt="" class="wp-image-863"/><figcaption>htop, un gestionnaire de tÃ¢ches en ligne de commande, actualise son contenu par intermittence. Il prouve aussi qu&rsquo;un programme sans interface graphique peut utiliser des mises en formes Ã©voluÃ©es et des couleurs. </figcaption></figure>



<p>D&rsquo;autres productions de sorties auraient Ã©tÃ© envisageables : Ã©criture d&rsquo;un fichier sur le disque, envoi d&rsquo;un message sur une connexion, etc.</p>



<h4>Les flux standards d&rsquo;entrÃ©e/sortie</h4>



<p>Sous Linux en particulier, les programmes en lignes de commande ont recours Ã  3 flux standards. Ils permettent au processus de communiquer avec l&rsquo;utilisateur ou d&rsquo;autres processus.</p>



<ul><li>Le flux d&rsquo;<strong>entrÃ©e standard</strong>, nommÃ© <strong>STDIN</strong> et indexÃ© comme le flux numÃ©ro 0. Par exemple, quand bash est en attente d&rsquo;une commande, chaque caractÃ¨re saisi par l&rsquo;utilisateur est envoyÃ© Ã  bash via son flux d&rsquo;entrÃ©e.</li></ul>



<ul><li>Le flux de <strong>sortie standard</strong> (<strong>STDOUT</strong>, nÂ°1). Un processus peut utiliser ce flux pour afficher une rÃ©ponse Ã  l&rsquo;utilisateur. Par exemple, <code>ls</code> affiche la liste des rÃ©pertoires sous la forme d&rsquo;un texte. Vous avez aussi rencontrÃ© <code>htop</code>, qui Ã©crit Ã  intervalle de temps rÃ©guliers dans ce flux.</li></ul>



<ul><li>Le flux de <strong>sortie d&rsquo;erreur standard </strong>(<strong>STDERR</strong>, nÂ°2). De la mÃªme maniÃ¨re que le processus envoie un rÃ©sultat valide sur STDOUT, il peut envoyer un message d&rsquo;erreur sur STDERR. <code>ls</code> utilise par exemple ce flux s&rsquo;il ne parvient pas Ã  ouvrir un rÃ©pertoire. Il s&rsquo;agit dans les 2 cas d&rsquo;un rÃ©sultat produit par le processus, mais les diffÃ©rencier par le canal permet de les traiter sÃ©parÃ©ment (notamment dans des scripts).</li></ul>



<figure class="wp-block-image size-large"><img loading="lazy" width="1024" height="605" src="https://thomas-veillard.fr/wp-content/uploads/2021/01/Stdstreams-notitle.svg-1024x605.png" alt="" class="wp-image-847" srcset="https://thomas-veillard.fr/wp-content/uploads/2021/01/Stdstreams-notitle.svg-1024x605.png 1024w, https://thomas-veillard.fr/wp-content/uploads/2021/01/Stdstreams-notitle.svg-300x177.png 300w, https://thomas-veillard.fr/wp-content/uploads/2021/01/Stdstreams-notitle.svg-768x454.png 768w, https://thomas-veillard.fr/wp-content/uploads/2021/01/Stdstreams-notitle.svg-1536x908.png 1536w, https://thomas-veillard.fr/wp-content/uploads/2021/01/Stdstreams-notitle.svg.png 1920w" sizes="(max-width: 1024px) 100vw, 1024px" /><figcaption>Les flux standard sous Linux : entrÃ©e, sortie, erreur. Source <a href="https://fr.wikipedia.org/wiki/Flux_standard" target="_blank" rel="noreferrer noopener">WikipÃ©dia</a></figcaption></figure>



<p>Cette faÃ§on de gÃ©rer les flux standard sous Linux fait partie de la norme POSIX.</p>



<h4>Redirection du flux vers un fichier</h4>



<p>Vous avez ci-dessous une dÃ©monstration de redirection de flux.</p>



<figure class="wp-block-image size-full"><img loading="lazy" width="1125" height="697" src="https://thomas-veillard.fr/wp-content/uploads/2021/01/demo-redirection-de-flux.gif" alt="" class="wp-image-868"/><figcaption>DÃ©monstration d&rsquo;une redirection de flux vers un fichier.</figcaption></figure>



<ol><li>D&rsquo;abord, je saisis la commande <code>ls -lhsa</code>. La sortie est affichÃ©e en console. Un seul fichier <code>fichier.txt</code> existe dans le rÃ©pertoire courant. Un explorateur graphique de fichiers est ouvert en arriÃ¨re-plan dans le mÃªme rÃ©pertoire.</li><li>Ensuite, j&rsquo;adapte cette commande pour rediriger la sortie vers un fichier. Cette commande adaptÃ©e est <code>ls -lhsa &gt; sortie_redirigee.txt</code>.</li><li>Aucune sortie n&rsquo;est affichÃ©e en console. Un fichier est crÃ©Ã© dans le rÃ©pertoire courant. Je l&rsquo;ouvre et on y retrouve le contenu de notre premiÃ¨re commande.</li></ol>



<p>Dans cette dÃ©monstration, nous avons seulement redirigÃ© le flux STDOUT vers le fichier. On peut faire bien plus avec les redirections.</p>



<h4>Redirection de STDOUT et STDERR en dÃ©tails</h4>



<p>Ces deux exemples sont Ã©quivalents. Ils redirigent STDOUT (flux nÂ°1) vers un fichier. En cas d&rsquo;erreur sur STDERR, les messages s&rsquo;affichent toujours en console.</p>


<pre class="wp-block-code" aria-describedby="shcb-language-3" data-shcb-language-name="Bash" data-shcb-language-slug="bash"><div><code class="hljs language-bash">ls -lhsa &gt; sortie_redirigee.txt
ls -lhsa 1&gt; sortie_redirigee.txt</code></div><small class="shcb-language" id="shcb-language-3"><span class="shcb-language__label">Langage du codeÂ :</span> <span class="shcb-language__name">Bash</span> <span class="shcb-language__paren">(</span><span class="shcb-language__slug">bash</span><span class="shcb-language__paren">)</span></small></pre>


<p>Il est aussi possible de rediriger le flux STDERR (flux nÂ°2) avec cette syntaxe.</p>


<pre class="wp-block-code" aria-describedby="shcb-language-4" data-shcb-language-name="Bash" data-shcb-language-slug="bash"><div><code class="hljs language-bash">ls -lhsa 2&gt; sortie_erreur_redirigee.txt</code></div><small class="shcb-language" id="shcb-language-4"><span class="shcb-language__label">Langage du codeÂ :</span> <span class="shcb-language__name">Bash</span> <span class="shcb-language__paren">(</span><span class="shcb-language__slug">bash</span><span class="shcb-language__paren">)</span></small></pre>


<p>On peut rediriger sÃ©parÃ©ment STDOUT et STDERR vers deux fichiers diffÃ©rents.</p>


<pre class="wp-block-code" aria-describedby="shcb-language-5" data-shcb-language-name="Bash" data-shcb-language-slug="bash"><div><code class="hljs language-bash">ls -lhsa 1&gt; sortie_redirigee.txt 2&gt; sortie_erreur_redirigee.txt</code></div><small class="shcb-language" id="shcb-language-5"><span class="shcb-language__label">Langage du codeÂ :</span> <span class="shcb-language__name">Bash</span> <span class="shcb-language__paren">(</span><span class="shcb-language__slug">bash</span><span class="shcb-language__paren">)</span></small></pre>


<p>Une syntaxe permet de rediriger STDERR vers STDOUT. Dans le cas prÃ©sent, STDOUT restant affichÃ© en console, toute la sortie du programme est en console.</p>


<pre class="wp-block-code" aria-describedby="shcb-language-6" data-shcb-language-name="Bash" data-shcb-language-slug="bash"><div><code class="hljs language-bash">ls -lhsa 2&amp;&gt;1</code></div><small class="shcb-language" id="shcb-language-6"><span class="shcb-language__label">Langage du codeÂ :</span> <span class="shcb-language__name">Bash</span> <span class="shcb-language__paren">(</span><span class="shcb-language__slug">bash</span><span class="shcb-language__paren">)</span></small></pre>


<p>On peut chaÃ®ner la redirection STDERR vers STDOUT, puis STDOUT vers un fichier.</p>


<pre class="wp-block-code" aria-describedby="shcb-language-7" data-shcb-language-name="Bash" data-shcb-language-slug="bash"><div><code class="hljs language-bash">ls -lhsa 2&amp;&gt;1 &gt; sortie_fusionnee_redirigee.txt</code></div><small class="shcb-language" id="shcb-language-7"><span class="shcb-language__label">Langage du codeÂ :</span> <span class="shcb-language__name">Bash</span> <span class="shcb-language__paren">(</span><span class="shcb-language__slug">bash</span><span class="shcb-language__paren">)</span></small></pre>


<p>Les redirections avec un simple &lsquo;>&rsquo; dÃ©truisent le fichier existant. Ã€ l&rsquo;inverse, la syntaxe avec deux chevrons permet d&rsquo;ajouter le contenu en fin de fichier.</p>


<pre class="wp-block-code" aria-describedby="shcb-language-8" data-shcb-language-name="Bash" data-shcb-language-slug="bash"><div><code class="hljs language-bash">ls -lhsa &gt;&gt; sortie_redirigee.txt</code></div><small class="shcb-language" id="shcb-language-8"><span class="shcb-language__label">Langage du codeÂ :</span> <span class="shcb-language__name">Bash</span> <span class="shcb-language__paren">(</span><span class="shcb-language__slug">bash</span><span class="shcb-language__paren">)</span></small></pre>


<h4>Envoyer un fichier vers STDIN</h4>



<p>S&rsquo;il est possible de rediriger les flux de sortie STDOUT et STDERR vers un fichier, attendez-vous Ã  ce que rediriger un fichier vers STDIN le soit aussi ğŸ˜‹.</p>



<p>Seul le sens du chevron change. Ainsi, la commande <code>wc -l &lt; fichier.txt</code> lance la commande <code>cat</code> et lui passe le contenu de <code>fichier.txt</code> en entrÃ©e (sur STDIN).</p>



<p>La commande <code>wc -l</code> compte le nombre de lignes lues depuis l&rsquo;entrÃ©e standard jusqu&rsquo;Ã  ce que le flux soit fermÃ©. Elle me servira Ã  illustrer la redirection d&rsquo;un flux du fichier vers le STDIN d&rsquo;un processus.</p>



<figure class="wp-block-image size-large"><img loading="lazy" width="739" height="519" src="https://thomas-veillard.fr/wp-content/uploads/2021/02/Demo-wc.gif" alt="" class="wp-image-1774"/><figcaption>DÃ©monstration de wc -l qui compte le nombre de lignes envoyÃ©es sur STDIN. La combinaison Ctrl + D met fin Ã  la lecture et affiche Â«Â 6Â Â».</figcaption></figure>



<p>Maintenant que le comportement de <code>wc -l</code> est clair, voyons comment lui passer le contenu de <code>fichier.txt</code> en entrÃ©e, ce sorte qu&rsquo;il en compte le nombre de lignes.</p>



<figure class="wp-block-image size-large"><img loading="lazy" width="739" height="519" src="https://thomas-veillard.fr/wp-content/uploads/2021/02/Demo-wc-avec-redirection-de-flux.gif" alt="" class="wp-image-1775"/></figure>



<ol><li>Tout d&rsquo;abord, je crÃ©e un nouveau fichier sobrement nommÃ© <code>fichier.txt</code>. Il contient l&rsquo;introduction de cette sÃ©ance.</li><li>Ensuite, je lance <code>wc -l</code> en redirigeant le contenu du fichier vers STDIN. Et le tour est jouÃ©. Simple, n&rsquo;est-ce pas ?</li></ol>
<p>Lâ€™article <a rel="nofollow" href="https://thomas-veillard.fr/theorie-des-systemes-dexploitation-et-pratique-de-gnu-linux/chapitre-2-les-interfaces-utilisateur/3-la-ligne-de-commande-et-les-entrees-sorties/">3. La ligne de commande et les entrÃ©es / sorties</a> est apparu en premier sur <a rel="nofollow" href="https://thomas-veillard.fr/">Thomas VEILLARD</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>2. InstantanÃ©s de VM et changement d&#8217;environnement de bureau (TP)</title>
		<link>https://thomas-veillard.fr/theorie-des-systemes-dexploitation-et-pratique-de-gnu-linux/chapitre-2-les-interfaces-utilisateur/2-utiliser-les-instantanes-de-vm-et-changer-denvironnement-de-bureau-tp/</link>
		
		<dc:creator><![CDATA[Thomas Veillard]]></dc:creator>
		<pubDate>Tue, 19 Jan 2021 18:19:05 +0000</pubDate>
				<category><![CDATA[Chapitre 2. Les interfaces utilisateur]]></category>
		<category><![CDATA[ThÃ©orie des systÃ¨mes dâ€™exploitation et pratique de GNU/Linux]]></category>
		<guid isPermaLink="false">https://thomas-veillard.fr/?p=566</guid>

					<description><![CDATA[<p>Introduction Au cours de cette sÃ©ance de TP, vous prendrez un instantanÃ© de votre machine virtuelle sous Ubuntu. Vous apporterez ensuite des modifications Ã  cette machine en installant un nouvel environnement graphique. Enfin, vous aurez la possibilitÃ© de restaurer votre VM exactement telle qu&#8217;elle Ã©tait avant vos modifications. PrÃ©requis Avoir suivi le cours sur les &#8230; <a href="https://thomas-veillard.fr/theorie-des-systemes-dexploitation-et-pratique-de-gnu-linux/chapitre-2-les-interfaces-utilisateur/2-utiliser-les-instantanes-de-vm-et-changer-denvironnement-de-bureau-tp/" class="more-link">Continuer la lecture de <span class="screen-reader-text">2. InstantanÃ©s de VM et changement d&#8217;environnement de bureau (TP)</span></a></p>
<p>Lâ€™article <a rel="nofollow" href="https://thomas-veillard.fr/theorie-des-systemes-dexploitation-et-pratique-de-gnu-linux/chapitre-2-les-interfaces-utilisateur/2-utiliser-les-instantanes-de-vm-et-changer-denvironnement-de-bureau-tp/">2. InstantanÃ©s de VM et changement d&rsquo;environnement de bureau (TP)</a> est apparu en premier sur <a rel="nofollow" href="https://thomas-veillard.fr/">Thomas VEILLARD</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<h3>Introduction</h3>



<p>Au cours de cette sÃ©ance de TP, vous prendrez un instantanÃ© de votre machine virtuelle sous Ubuntu. Vous apporterez ensuite des modifications Ã  cette machine en installant un nouvel environnement graphique. Enfin, vous aurez la possibilitÃ© de restaurer votre VM exactement telle qu&rsquo;elle Ã©tait avant vos modifications.</p>



<h4>PrÃ©requis</h4>



<ul><li>Avoir suivi le cours sur <a href="https://thomas-veillard.fr/theorie-des-systemes-dexploitation-et-pratique-de-gnu-linux/chapitre-2-les-interfaces-utilisateur/1-les-interfaces-graphiques/">les interfaces graphiques</a>.</li><li>Disposer d&rsquo;une machine virtuelle Ubuntu 20.04, telle qu&rsquo;installÃ©e dans le TP <a href="https://thomas-veillard.fr/theorie-des-systemes-dexploitation-et-pratique-de-gnu-linux/chapitre-1-introduction/4-installation-dubuntu-dans-une-machine-virtuelle-tp/">Â«Â Installation dâ€™Ubuntu dans une machine virtuelleÂ Â»</a>.</li></ul>



<h4>Objectifs pÃ©dagogiques</h4>



<ul><li>Prendre et restaurer un instantanÃ© de machine virtuelle.</li><li>Comprendre la diffÃ©rence entre un instantanÃ© et une sauvegarde.</li><li>Installer un logiciel et ses dÃ©pendances avec APT.</li><li>Se familiariser avec Gnome et KDE.</li></ul>



<h3>Partie 1 : les instantanÃ©s</h3>



<p>Vous allez d&rsquo;abord expÃ©rimenter les instantanÃ©s de machines virtuelles. Il s&rsquo;agit d&rsquo;un formidable outil de productivitÃ©. Je vous recommande d&rsquo;en user systÃ©matiquement avant d&rsquo;effectuer une action que vous pourriez regretter. Ils vous permettront un retour en arriÃ¨re tel que le systÃ¨me Ã©tait au moment de l&rsquo;instantanÃ©.</p>



<p>Avec VirtualBox, vous pouvez crÃ©er un instantanÃ© des disques et de l&rsquo;Ã©tat dâ€™exÃ©cution de la machine virtuelle. Voici quelques scÃ©narii :</p>



<ul><li>Vous prenez un instantanÃ© du disque. Puis vous installez une mise Ã  jour logicielle. La mise Ã  jour se passe mal et le systÃ¨me ne redÃ©marre plus. Finalement, vous pourriez restaurer la machine virtuelle dans un Ã©tat fonctionnel antÃ©rieur Ã  la mise Ã  jour.</li><li>Vous prenez un instantanÃ© du disque et de l&rsquo;exÃ©cution de la machine. Vous fermez malencontreusement un programme. En restaurant votre dernier instantanÃ©, votre programme sera Ã  nouveau ouvert (comme s&rsquo;il n&rsquo;avait jamais Ã©tÃ© fermÃ©).</li></ul>



<p>Vous allez expÃ©rimenter ces fonctionnalitÃ©s au travers des prochains exercices.</p>



<figure class="wp-block-image size-large"><img loading="lazy" width="975" height="567" src="https://thomas-veillard.fr/wp-content/uploads/2021/01/Vues-journaux-et-instantanees-de-VirtualBox.gif" alt="" class="wp-image-646"/><figcaption>DÃ©monstration de l&rsquo;accÃ¨s aux vues Â«Â instantanÃ©sÂ Â» et Â«Â journauxÂ Â» d&rsquo;une machine virtuelle sur VirtualBox.</figcaption></figure>



<p class="exercice"><strong>Exercice 1</strong> : En vous assurant que la machine virtuelle est Ã©teinte, prenez un premier instantanÃ©. Nommez le Â«Â FraÃ®chement installÃ©, Ã  l&rsquo;arrÃªtÂ Â». Un fichier a Ã©tÃ© crÃ©Ã© dans le dossier Â«Â TP Ubuntu/SnapshotsÂ Â» ? Quelle est son extension ? DÃ©duisez le type de donnÃ©es qu&rsquo;il contient.</p>



<p class="exercice"><strong>Exercice 2</strong> : DÃ©marrez maintenant la machine virtuelle. Allez jusqu&rsquo;Ã  l&rsquo;Ã©cran de dÃ©verrouillage. Prenez un second instantanÃ© et nommez le Â«Â FraÃ®chement installÃ©, en cours dâ€™exÃ©cutionÂ Â». Observez les changements dans le dossier Â«Â TP Ubuntu/SnapshotsÂ Â». Combien de nouveaux fichiers ont Ã©tÃ© crÃ©Ã©s ? Quelles sont leurs extensions. Que peut bien contenir le fichier avec l&rsquo;extension Â«Â .savÂ Â» ?</p>



<p class="exercice"><strong>Exercice 3</strong> : Connectez-vous Ã  votre compte sur Ubuntu. Ouvrez plusieurs logiciels de votre choix. Ensuite, prenez un nouvel instantanÃ© et nommez le Â«Â FraÃ®chement installÃ©, en cours dâ€™exÃ©cution et connectÃ©Â Â».</p>



<p class="exercice"><strong>Exercice 4</strong> : Ã‰teignez proprement la machine virtuelle (depuis l&rsquo;interface d&rsquo;Ubuntu, sans passer par le bouton Â«Â fermerÂ Â» de la fenÃªtre de VirtualBox).</p>



<p>En consultant la liste des instantanÃ©s, vous devriez obtenir le rÃ©sultat ci-dessus (horodatage mis Ã  part, Ã©videmment).</p>



<figure class="wp-block-image size-large"><img loading="lazy" width="1024" height="573" src="https://thomas-veillard.fr/wp-content/uploads/2021/01/Liste-des-instantanes-1024x573.png" alt="" class="wp-image-652" srcset="https://thomas-veillard.fr/wp-content/uploads/2021/01/Liste-des-instantanes-1024x573.png 1024w, https://thomas-veillard.fr/wp-content/uploads/2021/01/Liste-des-instantanes-300x168.png 300w, https://thomas-veillard.fr/wp-content/uploads/2021/01/Liste-des-instantanes-768x430.png 768w, https://thomas-veillard.fr/wp-content/uploads/2021/01/Liste-des-instantanes.png 1047w" sizes="(max-width: 1024px) 100vw, 1024px" /><figcaption>Ã‰tat attendu Ã  la fin de l&rsquo;exercice 4. Trois instantanÃ©s ont Ã©tÃ© crÃ©Ã©s et VM Ã  l&rsquo;arrÃªt. </figcaption></figure>



<p class="exercice"><strong>Exercice 5</strong> : Virtualbox signale que l&rsquo;Ã©tat actuel est modifiÃ©. Ã€ votre avis, Ã  quelles modifications fait-il rÃ©fÃ©rence ?</p>



<p class="exercice"><strong>Exercice 6</strong> : Restaurez l&rsquo;instantanÃ© Â«Â FraÃ®chement installÃ©, en cours dâ€™exÃ©cution et connectÃ©Â Â». DÃ©cochez au besoin la case Â«Â crÃ©er un instantanÃ© de l&rsquo;Ã©tat actuel de la machineÂ Â». L&rsquo;Ã©tat actuel n&rsquo;est plus considÃ©rÃ© comme modifiÃ©. Cela valide-t-il votre hypothÃ¨se de l&rsquo;exercice 5 ?</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" width="440" height="276" src="https://thomas-veillard.fr/wp-content/uploads/2021/01/Avertissement-virtualbox-avant-restauration-de-snapshot.png" alt="" class="wp-image-656" srcset="https://thomas-veillard.fr/wp-content/uploads/2021/01/Avertissement-virtualbox-avant-restauration-de-snapshot.png 440w, https://thomas-veillard.fr/wp-content/uploads/2021/01/Avertissement-virtualbox-avant-restauration-de-snapshot-300x188.png 300w" sizes="(max-width: 440px) 100vw, 440px" /><figcaption>Avertissement de VirtualBox avant de restaurer un instantanÃ© qui Ã©craserait des changements non validÃ©s dans un autre instantanÃ©.</figcaption></figure></div>



<p class="exercice"><strong>Exercice 6</strong> : DÃ©marrez Ã  nouveau la machine virtuelle. Vous retrouverez votre session et les vos diffÃ©rents logiciels dans l&rsquo;Ã©tat exact oÃ¹ vous les aviez laissÃ©s. Comment cela est-il possible alors que vous aviez Ã©teint la machine ?</p>



<h3>Partie 2 : plusieurs environnements de bureau</h3>


<div class="exercice" style="margin-bottom: 1em;">
<p><strong>Exercice 7</strong> : Installez KDE, sachant que :</p>
<ul style="margin-left: 1em;">
<li>le paquet <code>kde-plasma-desktop</code> permet d&rsquo;installer l&rsquo;environnement de bureau KDE;</li>
<li>que vous avez dÃ©jÃ  installÃ© les paquets <code>gcc</code> et <code>make</code> dans le prÃ©cÃ©dent TP (<a href="https://thomas-veillard.fr/theorie-des-systemes-dexploitation-et-pratique-de-gnu-linux/chapitre-1-introduction/4-installation-dubuntu-dans-une-machine-virtuelle-tp/" data-wplink-url-error="true">Installation dâ€™Ubuntu dans une machine virtuelle</a>);</li>
</ul>
<p>Juste avant de confirmer l&rsquo;installation, prenez note de l&rsquo;espace disque supplÃ©mentaire nÃ©cessaire. Pourquoi autant d&rsquo;espace libre est-il nÃ©cessaire ?</p>
<p>VÃ©rifiez que le systÃ¨me peut procÃ©der Ã  l&rsquo;installation. Sinon, vous pouvez :</p>
<ul style="margin-left: 1em; margin-bottom: 0;">
<li>dÃ©sinstaller des logiciels inutiles. Vous pouvez le faire graphiquement avec le logiciel Â«Â Ubuntu SoftwareÂ Â»;</li>
<li>prÃ©fÃ©rer l&rsquo;installation du paquet <code>xfce4</code>, une autre interface beaucoup plus lÃ©gÃ¨re.</li>
</ul>
</div>


<p>Une fois KDE ou LXCE installÃ©, vous pouvez changer de gestionnaire de bureau Ã  la volÃ©e. Il faudra toutefois fermer la session active et la rouvrir comme montrÃ© sur l&rsquo;animation ci-dessous.</p>



<figure class="wp-block-image size-large"><img loading="lazy" width="938" height="764" src="https://thomas-veillard.fr/wp-content/uploads/2021/01/Passage-de-Gnome-a-KDE.gif" alt="" class="wp-image-680"/><figcaption>DÃ©monstration du passage de l&rsquo;interface Gnome Ã  KDE.</figcaption></figure>



<p class="exercice"><strong>Exercice 8</strong> : N&rsquo;hÃ©sitez pas Ã  expÃ©rimenter les deux environnements et Ã  les comparer.</p>



<p class="exercice"><strong>Exercice 9</strong>: Le disque virtuel ne faisant que 10 Go, il reste presque plus d&rsquo;espace libre. Pour Ã©viter les problÃ¨mes dans les prochains TP, restaurez votre premier instantanÃ©. Supprimez les autres pour libÃ©rer de l&rsquo;espace disque sur l&rsquo;hÃ´te.</p>



<p>FÃ©licitation, vous avez retrouvÃ© votre machine virtuelle telle qu&rsquo;elle Ã©tait en dÃ©but de sÃ©ance ! Bien que ce TP n&rsquo;ait laissÃ© aucune trace sur votre VM, j&rsquo;espÃ¨re que vous en retiendrez ses enseignements ğŸ¤”.</p>



<p class="exercice"><strong>Exercice 10</strong>: Au fait, sauriez-vous expliquer les diffÃ©rences entre un instantanÃ© et une sauvegarde ?</p>
<p>Lâ€™article <a rel="nofollow" href="https://thomas-veillard.fr/theorie-des-systemes-dexploitation-et-pratique-de-gnu-linux/chapitre-2-les-interfaces-utilisateur/2-utiliser-les-instantanes-de-vm-et-changer-denvironnement-de-bureau-tp/">2. InstantanÃ©s de VM et changement d&rsquo;environnement de bureau (TP)</a> est apparu en premier sur <a rel="nofollow" href="https://thomas-veillard.fr/">Thomas VEILLARD</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>1. Les interfaces graphiques</title>
		<link>https://thomas-veillard.fr/theorie-des-systemes-dexploitation-et-pratique-de-gnu-linux/chapitre-2-les-interfaces-utilisateur/1-les-interfaces-graphiques/</link>
		
		<dc:creator><![CDATA[Thomas Veillard]]></dc:creator>
		<pubDate>Wed, 13 Jan 2021 18:29:03 +0000</pubDate>
				<category><![CDATA[Chapitre 2. Les interfaces utilisateur]]></category>
		<category><![CDATA[ThÃ©orie des systÃ¨mes dâ€™exploitation et pratique de GNU/Linux]]></category>
		<guid isPermaLink="false">https://thomas-veillard.fr/?p=509</guid>

					<description><![CDATA[<p>Ce chapitre est l&#8217;un des rares abordant la question des interfaces graphiques. En effet, ce cours se concentrera plutÃ´t sur l&#8217;usage de Linux sur les serveurs. Toutefois, en commenÃ§ant par ce sujet, j&#8217;espÃ¨re adoucir la courbe d&#8217;apprentissage pour ceux et celles qui n&#8217;auraient pas expÃ©rimentÃ© la ligne de commande auparavant. Aussi, pour bien comprendre les &#8230; <a href="https://thomas-veillard.fr/theorie-des-systemes-dexploitation-et-pratique-de-gnu-linux/chapitre-2-les-interfaces-utilisateur/1-les-interfaces-graphiques/" class="more-link">Continuer la lecture de <span class="screen-reader-text">1. Les interfaces graphiques</span></a></p>
<p>Lâ€™article <a rel="nofollow" href="https://thomas-veillard.fr/theorie-des-systemes-dexploitation-et-pratique-de-gnu-linux/chapitre-2-les-interfaces-utilisateur/1-les-interfaces-graphiques/">1. Les interfaces graphiques</a> est apparu en premier sur <a rel="nofollow" href="https://thomas-veillard.fr/">Thomas VEILLARD</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>Ce chapitre est l&rsquo;un des rares abordant la question des interfaces graphiques. En effet, ce cours se concentrera plutÃ´t sur l&rsquo;usage de Linux sur les serveurs. Toutefois, en commenÃ§ant par ce sujet, j&rsquo;espÃ¨re adoucir la courbe d&rsquo;apprentissage pour ceux et celles qui n&rsquo;auraient pas expÃ©rimentÃ© la ligne de commande auparavant.</p>



<p>Aussi, pour bien comprendre les avantages et inconvÃ©nients de chaque solution, ne vaut-il pas les avoir toutes deux expÃ©rimentÃ©es ? Et puis, je rappelle que ce cours doit vous apporter une culture sur l&rsquo;Ã©cosystÃ¨me qui gravite autour de Linux.</p>



<h2>Du choix pour l&rsquo;environnement de bureau</h2>



<p>Vous souvenez-vous de la grande diversitÃ© des distributions GNU/Linux ? Sans tomber dans les mÃªmes extrÃªmes, il y a Ã©galement un large choix de gestionnaires de bureau. De quoi faire plaisir Ã  tous ceux qui ont envie de changement et veulent personnaliser leur environnement de travail.</p>



<p>Par chance, les diffÃ©rents gestionnaires de bureau proposent des expÃ©riences vraiment variÃ©es. En contrepartie, l&rsquo;expÃ©rience utilisateur change radicalement d&rsquo;une installation Ã  l&rsquo;autre. MÃªme les solutions techniques sous-jacentes diffÃ¨rent. Cela aboutit parfois Ã  dÃ©multiplier les efforts de dÃ©veloppement.</p>



<h4>Gnome 3</h4>



<figure class="wp-block-image size-large"><img loading="lazy" width="1024" height="576" src="https://thomas-veillard.fr/wp-content/uploads/2021/01/activities-overview-1024x576.jpg" alt="" class="wp-image-583" srcset="https://thomas-veillard.fr/wp-content/uploads/2021/01/activities-overview-1024x576.jpg 1024w, https://thomas-veillard.fr/wp-content/uploads/2021/01/activities-overview-300x169.jpg 300w, https://thomas-veillard.fr/wp-content/uploads/2021/01/activities-overview-768x432.jpg 768w, https://thomas-veillard.fr/wp-content/uploads/2021/01/activities-overview-1536x864.jpg 1536w, https://thomas-veillard.fr/wp-content/uploads/2021/01/activities-overview-2048x1152.jpg 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /><figcaption>L&rsquo;interface Gnome Shell, source: <a href="https://www.gnome.org/gnome-3/">Gnome</a></figcaption></figure>



<p>Gnome Shell est l&rsquo;interface par dÃ©faut d&rsquo;Ubuntu 20.04 et de Fedora, entre autres. Il supporte de multiples espaces de travail, des extensions, etc.</p>



<p>La fondation Gnome dÃ©veloppe de nombreux logiciels, graphiquement et techniquement trÃ¨s bien intÃ©grÃ©s Ã  Gnome Shell, tels que :</p>



<ul><li>un Ã©diteur de paramÃ¨tres</li><li>un moniteur systÃ¨me (Ã©quivalant du gestionnaire de tÃ¢che sous Windows)</li><li>un courrielleur (gnome-evolution)</li><li>une boutique applicative (gnome-software)</li><li>un explorateur de fichiers (nautilus)</li><li>un bus de communication interprocessus (d-bus)</li><li>etc.</li></ul>



<p>Ces logiciels sont construits avec la bibliothÃ¨que C GTK, elle aussi dÃ©veloppÃ©e par la fondation Gnome. GTK est une bibliothÃ¨que Â«Â cross plateformÂ Â». Ã€ ce titre, elle est aussi prÃ©sente sur MacOS et Windows.</p>



<p>Gnome Shell a activement recours Ã  l&rsquo;accÃ©lÃ©ration matÃ©rielle (carte graphique) est rÃ©putÃ© assez consommateur en ressources.</p>



<h4>KDE</h4>



<figure class="wp-block-image size-large"><img loading="lazy" width="1024" height="576" src="https://thomas-veillard.fr/wp-content/uploads/2021/01/plasma-launcher-1024x576.png" alt="" class="wp-image-585" srcset="https://thomas-veillard.fr/wp-content/uploads/2021/01/plasma-launcher-1024x576.png 1024w, https://thomas-veillard.fr/wp-content/uploads/2021/01/plasma-launcher-300x169.png 300w, https://thomas-veillard.fr/wp-content/uploads/2021/01/plasma-launcher-768x432.png 768w, https://thomas-veillard.fr/wp-content/uploads/2021/01/plasma-launcher-1536x864.png 1536w, https://thomas-veillard.fr/wp-content/uploads/2021/01/plasma-launcher.png 1920w" sizes="(max-width: 1024px) 100vw, 1024px" /><figcaption>Capture d&rsquo;Ã©cran de l&rsquo;interface KDE Plasma, source <a href="https://kde.org/" target="_blank" rel="noreferrer noopener">KDE</a></figcaption></figure>



<p>L&rsquo;interface Plasma de KDE paraÃ®tra plus familiÃ¨re aux utilisateurs de Windows, que ce soit par son Â«Â menu dÃ©marrÃ©Â Â» ou la disposition de sa Â«Â barre de tÃ¢chesÂ Â».</p>



<p>KDE n&rsquo;en est pas moins une interface hautement personnalisable et extensible. Elle est construite sur la bibliothÃ¨que QT.</p>



<p>Sur beaucoup de points, KDE et Gnome sont similaires. Les deux projets ont activement dÃ©veloppÃ© des logiciels s&rsquo;appuyant sur les mÃªmes fondations techniques que leurs gestionnaires de bureaux.</p>



<p>Heureusement, un programme dÃ©veloppÃ© pour KDE fonctionne sur Gnome, et inversement. Toutefois, dans ces situations, on retrouvera sur la mÃªme machine des dÃ©pendances des deux environnements. Cet excÃ©dent de binaires dÃ©passe facilement plusieurs centaines de mÃ©gaoctets sur le disque.</p>



<h4>Les environnements lÃ©gers</h4>



<p>Gnome et KDE sont les principaux reprÃ©sentants, mais ils partagent la place avec LXDE et Xfce. Ces alternatives visent la sobriÃ©tÃ© et une consommation de ressource moindre.</p>



<figure class="wp-block-image size-large"><img loading="lazy" width="795" height="600" src="https://thomas-veillard.fr/wp-content/uploads/2021/01/795px-LXDE_desktop_full.png" alt="" class="wp-image-588" srcset="https://thomas-veillard.fr/wp-content/uploads/2021/01/795px-LXDE_desktop_full.png 795w, https://thomas-veillard.fr/wp-content/uploads/2021/01/795px-LXDE_desktop_full-300x226.png 300w, https://thomas-veillard.fr/wp-content/uploads/2021/01/795px-LXDE_desktop_full-768x580.png 768w" sizes="(max-width: 795px) 100vw, 795px" /><figcaption>L&rsquo;interface LXDE est plutÃ´t minimaliste. Source <a href="https://wiki.lxde.org/en/File:LXDE_desktop_full.png" target="_blank" rel="noreferrer noopener">lxde.org</a></figcaption></figure>



<h2>Les couches de l&rsquo;interface graphique</h2>



<figure class="wp-block-image size-large"><img loading="lazy" width="1024" height="768" src="https://thomas-veillard.fr/wp-content/uploads/2021/01/Schema_des_couches_de_linterface_graphique-1024x768.png" alt="" class="wp-image-590" srcset="https://thomas-veillard.fr/wp-content/uploads/2021/01/Schema_des_couches_de_linterface_graphique-1024x768.png 1024w, https://thomas-veillard.fr/wp-content/uploads/2021/01/Schema_des_couches_de_linterface_graphique-300x225.png 300w, https://thomas-veillard.fr/wp-content/uploads/2021/01/Schema_des_couches_de_linterface_graphique-768x576.png 768w, https://thomas-veillard.fr/wp-content/uploads/2021/01/Schema_des_couches_de_linterface_graphique.png 1280w" sizes="(max-width: 1024px) 100vw, 1024px" /><figcaption>Les diffÃ©rentes couches pour construire une interface sous GNU/Linux.<br>Source <a href="https://fr.wikipedia.org/wiki/Gestionnaire_de_fen%C3%AAtres" target="_blank" rel="noreferrer noopener">WikipÃ©dia</a></figcaption></figure>



<h4>Le matÃ©riel</h4>



<p>Les traitements graphiques sont consommateurs de ressources de calcul. Bien que le processeur soit Ã  mÃªme d&rsquo;effectuer ces rendus, on prÃ©fÃ¨re dÃ©lÃ©guer ce genre de tÃ¢ches Ã  des cartes d&rsquo;accÃ©lÃ©ration matÃ©rielle.</p>



<p>On parle d&rsquo;accÃ©lÃ©ration matÃ©rielle quand une tÃ¢che est assurÃ©e par un circuit spÃ©cialisÃ© plutÃ´t qu&rsquo;un processeur gÃ©nÃ©rique. La carte graphique en est une. Elle excelle en traitements parallÃ©lisÃ©s (donc pas que les images ou la 3D). Ã€ l&rsquo;inverse, un processeur est bien meilleur pour les tÃ¢ches sÃ©quentielles.</p>



<h4>Le noyau</h4>



<p>Comme d&rsquo;habitude, le noyau contrÃ´le le matÃ©riel et expose une couche d&rsquo;abstraction aux pÃ©riphÃ©riques de plus haut niveau. Cette couche d&rsquo;abstraction est une API appelÃ©e le <a href="https://en.wikipedia.org/wiki/Direct_Rendering_Manager" target="_blank" rel="noreferrer noopener">Direct Rendering Manager (DRM)</a>. Elle reste de trÃ¨s bas niveau (comme le sous-entend le terme Â«Â directÂ Â») et vise surtout Ã  permettre la coopÃ©ration de plusieurs processus.</p>



<h4>Le systÃ¨me de fenÃªtrage</h4>



<p>Le systÃ¨me de fenÃªtrage consomme l&rsquo;API DRM du noyau et expose Ã  son tour une API de plus haut niveau. Cette derniÃ¨re permet par exemple de rendu de formes gÃ©omÃ©triques et de polices. En prime, il gÃ¨re la redirection de clavier et de la souris vers la fenÃªtre active.</p>



<p>Sous Linux, X11 est le logiciel de rÃ©fÃ©rence. Il se fait toutefois progressivement remplacer par Wayland, qui apportera plus de sÃ©curitÃ© en isolant mieux les fenÃªtres entre elles. Mais Wayland ne supporte pas encore toutes les fonctionnalitÃ©s de X11.</p>



<p>Comme nous le verrons dans un TP, X11 fonctionne sur un modÃ¨le de client-serveur. C&rsquo;est Ã  dire qu&rsquo;il fonctionne comme un processus autonome et qu&rsquo;il expose son API via une communication interprocessus (capable de transiter sur le rÃ©seau). L&rsquo;autre processus qui utilise cette API est qualifiÃ© de client. X11 et le processus client sont complÃ¨tement indÃ©pendants : ils peuvent Ãªtre sur des machines diffÃ©rentes.</p>



<h4>Le gestionnaire de fenÃªtres</h4>



<p>Le gestionnaire de fenÃªtres fonctionne en coopÃ©ration avec le systÃ¨me de fenÃªtrage. Il permet de positionner et de dÃ©corer les fenÃªtres. La dÃ©coration d&rsquo;une fenÃªtre consiste Ã  afficher une bordure, un titre, des boutons de rÃ©duction, etc.</p>



<h4>L&rsquo;interface graphique (ou gestionnaire de bureau)</h4>



<p>On a vu des exemples d&rsquo;interface graphique en dÃ©but de sÃ©ance. Elles crÃ©ent l&rsquo;environnement dans lequel existent les fenÃªtres. Cet environnement est composÃ© d&rsquo;un lanceur d&rsquo;application (ex. un Ã©quivalent du Â«Â menu dÃ©marrerÂ Â» de Windows), d&rsquo;un bureau, d&rsquo;une zone oÃ¹ retrouver les fenÃªtres rÃ©duites, d&rsquo;un espace d&rsquo;affichage des notifications, etc.</p>



<p>Le gestionnaire de bureau contrÃ´le le systÃ¨me de fenÃªtrage via son API. Pour rappel, cette API permet d&rsquo;afficher un texte, de dessiner des lignes et des rectangles. Construire une belle fenÃªtre Ã  partir de ces primitives est fastidieux. Pour simplifier cette tÃ¢che, les Ã©diteurs de bureaux dÃ©veloppent des bibliothÃ¨ques (comme QT et GTK). GrÃ¢ce Ã  elles, crÃ©er un bouton se fait en une seule instruction. Elles prennent aussi en charge les thÃ¨mes (couleurs, taille de textes). Ces bibliothÃ¨ques peuvent Ãªtre rÃ©utilisÃ©es par des logiciels tiers pour construire leurs interfaces, comme s&rsquo;ils assemblaient des briques prÃ©existantes.</p>



<h2>Que retenir ?</h2>



<ul><li>Contrairement Ã  Windows ou MacOS, l&rsquo;environnement graphique de GNU/Linux peut Ãªtre installÃ©, dÃ©sinstallÃ© ou remplacÃ© par l&rsquo;utilisateur. Plusieurs environnements peuvent cohabiter entre eux.</li><li>Il existe plusieurs environnements graphiques. Gnome et KDE sont les plus largement diffusÃ©s.</li><li>Les bibliothÃ¨ques contiennent des fonctionnalitÃ©s facilement rÃ©utilisables. On avait dÃ©jÃ  Ã©voquÃ© la bibliothÃ¨que standard C. Dans cette sÃ©ance, vous avez dÃ©couvert d&rsquo;autres. Par exemple, GTK et QT servent Ã  construire des interfaces graphiques.</li><li>Sous GNU/Linux, le rendu de la fenÃªtre est fait par X11 ou Wayland. Ce sont des applications client-serveur. X11 peut fonctionner sur une machine distante (transparence rÃ©seau), autorisant l&rsquo;export de fenÃªtres lors d&rsquo;une session distante (on y revient lors d&rsquo;un TP).</li><li>Bien que le CPU soit capable de faire un rendu graphique, on lui prÃ©fÃ¨re des circuits spÃ©cialisÃ©s comme une carte ou un contrÃ´leur graphiques. Cela s&rsquo;appelle l&rsquo;accÃ©lÃ©ration matÃ©rielle.</li><li>Le matÃ©riel est toujours utilisÃ© au travers du noyau. Toutefois, la couche dâ€™abstraction mise en place par le noyau reste de bas niveau (ex. DRM). Les Ã©diteurs prÃ©fÃ¨rent utiliser des API et des bibliothÃ¨ques de plus haut niveau.</li></ul>



<p></p>
<p>Lâ€™article <a rel="nofollow" href="https://thomas-veillard.fr/theorie-des-systemes-dexploitation-et-pratique-de-gnu-linux/chapitre-2-les-interfaces-utilisateur/1-les-interfaces-graphiques/">1. Les interfaces graphiques</a> est apparu en premier sur <a rel="nofollow" href="https://thomas-veillard.fr/">Thomas VEILLARD</a>.</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
